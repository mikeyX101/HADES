@model MainViewViewModel

@{ HADES.Data.ApplicationDbContext tempdb = new(); }
@{ IUser u = HADES.Util.ConnexionUtil.CurrentUser(Context.User); }

<h3 class="mt-1 mb-2 pr-2">
    @Localizer["Folder"] @Model.SelectedNodeName
    @if (u.GetRole().AdCrudAccess)
    {<!-- Button trigger modal create OU -->
                <button type="button" class="btn btn-primary float-right" style="margin-right: 0.125rem;" data-toggle="modal" data-target="@Model.DataTarget" data-backdrop="false">
                    <span data-toggle="tooltip" data-html="true" data-placement="right" title="@Model.CreateButtonLabel">
                        <i class="fa fa-plus fa-fw mr-4 ml-4"></i>
                    </span>
                </button>}
</h3>

<link rel="stylesheet" href="~/css/GroupModalGeneral.css" />

@if (u.GetRole().AdCrudAccess)
{<!-- Modal Create Group -->
                @await Html.PartialAsync("_CreateGroupModal", Model) <!-- Modal Create OU -->
                                                @await Html.PartialAsync("_CreateOuModal", Model)}


<!-- Liste des dossiers ou des groupes à partir de la sélection du treeview -->
<table class="table">
    <thead>
    </thead>
    <tbody>
        <tr><td style="border-top:none;"></td></tr>

        @for (int i = 0; i < Model.ADRoot.Count; i++)
        {
            var selectedPathLength = Model.SelectedPath.Split('/').Length;

            var dataTarget = "";
            var id = "a" + i.ToString();
            var groupId = "b" + i.ToString();

            if (Model.ADRoot[i].Path == Model.SelectedPath)
            {
                <tr>
                    <td>
                        @if (selectedPathLength == 2)
                        {
                            <a data-ajax="true" data-ajax-method="POST" data-ajax-mode="replace" data-ajax-update="#main"
                               href='@Url.Action("UpdateContent","Home",
                                    new {
                                        selectedPathForContent = Model.SelectedPath + (selectedPathLength == 2 ? "/" + Model.ADRoot[i].SamAccountName : ""),
                                        expandedNodeNames = Model.ExpandedNodesName
                                    })'>
                                <i class="icon fa fa-folder mr-2"></i>
                                @Model.ADRoot[i].SamAccountName
                            </a>
                            dataTarget = "#a" + i.ToString();
                        }
                        else
                        {
                            <a href='#' style="pointer-events: none">
                                <i class="icon fa fa-users mr-2"></i>
                                @Model.ADRoot[i].SamAccountName
                            </a>
                            dataTarget = "#b" + i.ToString();
                        }
                    </td>
                    <td style="text-align: right">

        <!-- Button trigger modal rename OU -->
        <!-- Modal Rename OU -->

                        <div class="modal fade" id="@id" role="dialog" aria-labelledby="@Model.ADRoot[i].SamAccountName" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content" role="document">
                                    <div class="modal-header text-center">
                                        <h4 class="modal-title w-100 font-weight-bold" id="@Model.ADRoot[i].SamAccountName">@Model.EditLinkLabel</h4>
                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                    <div class="modal-body mx-3">
                                        <div class="md-form">
                                            <form class="needs-validation" asp-controller="Home" asp-action="Rename" data-ajax="true" data-ajax-method="POST" data-ajax-mode="replace" data-ajax-update="#main" novalidate>
                                                <div class="form-group row">
                                                    <div class="col-10">
                                                        <input type="text" name="NewName" value="@Model.ADRoot[i].SamAccountName" class="form-control validate" pattern='^[^/[\]:;|=+*?<>,"\\]*$' required />
                                                        <input type="hidden" name="SelectedPath" value="@Model.SelectedPath" />
                                                        <input type="hidden" name="SelectedContentName" value="@Model.ADRoot[i].SamAccountName" />
                                                        <input type="hidden" name="ExpandedNodesName" value="@Model.ExpandedNodesName" />
                                                        <div class="invalid-tooltip">
                                                            @Localizer["InvalidCharacters"]
                                                        </div>
                                                    </div>
                                                    <button type="submit" class="btn btn-primary col-2">@HADES.Strings.OK</button>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        @{
                            var navGroupInfo = "#nav-groupInfo" + i;
                            var navGroupInfoTab = "nav-groupInfo" + i;

                                var navMembers = "#nav-members" + i;
                                var navMembersTab = "nav-members" + i;

                                var navOwners = "#nav-owners" + i;
                                var navOwnersTab = "nav-owners" + i;


                                Model.GroupAD = Model.ADManager.getGroupInformation(Model.ADRoot[i].Dn);
                                var members = Model.GroupAD.Members.Select(x => x.SamAccountName);
                                var owners = "";


                                Model.OuGroup = Model.GroupAD.SamAccountName;


                                if (members.Any())
                                {
                                    Model.SelectedMembers = Newtonsoft.Json.JsonConvert.SerializeObject(members);
                                    Model.BeforeEditMembers = Newtonsoft.Json.JsonConvert.SerializeObject(members);
                                }
                                else
                                {
                                    Model.SelectedMembers = "";
                                    Model.BeforeEditMembers = "";
                                }

                                if (owners.Any())
                                    Model.SelectedOwners = Newtonsoft.Json.JsonConvert.SerializeObject(owners);
                                else
                                    Model.SelectedOwners = "";

                                var selectedOwnersId = "#selectedOwners" + i;
                                var selectedOwnersTarget = "selectedOwners" + i; }
        <span data-toggle="tooltip" data-html="true" data-placement="right" title="@Model.EditLinkLabel">
            <a data-ajax="true" data-ajax-method="GET" data-ajax-mode="replace" data-ajax-update="@selectedOwnersId"
               href='@Url.Action("GetOwners","Home",new { guid = Model.GroupAD.ObjectGUID})' class="btn btn-primary" data-toggle="modal" data-target="@dataTarget" data-backdrop="false">
                <i class="fa fa-edit fa-fw"></i>
            </a>
        </span>


        <div class="modal fade" id="@groupId" tabindex="-1" role="dialog" aria-labelledby="GroupCreateLbl"
             aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="GroupCreateLbl">Edit group</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <form class="needs-validation" asp-controller="Home" asp-action="EditGroupModal" data-ajax="true" data-ajax-method="POST" data-ajax-mode="replace" data-ajax-update="#main" novalidate>
                        <div class="modal-body GroupModalBody">
                            <nav>
                                <div class="nav nav-tabs nav-fill" id="nav-tab" role="tablist">
                                    @if (u.GetRole().AdCrudAccess)
                                    {
                <a class="nav-item nav-link active" id="nav-groupName-tab" data-toggle="tab" href="@navGroupInfo"
                   role="tab" aria-controls="nav-home" aria-selected="true">General</a>}

                                    <a class="nav-item nav-link @if (!u.GetRole().AdCrudAccess) { @Html.Raw("active"); } " id="nav-members-tab" data-toggle="tab" href="@navMembers"
                                       role="tab" aria-controls="nav-members" aria-selected="false">Members</a>
                                    @if (u.GetRole().AdCrudAccess)
                                    {
                <a class="nav-item nav-link" id="nav-owners-tab" data-toggle="tab" href="@navOwners"
                   role="tab" aria-controls="nav-owners" aria-selected="false">Owners</a>}

                                </div>
                            </nav>
                            <div class="tab-content" id="nav-tabContent">
                                @if (u.GetRole().AdCrudAccess)
                                {<!-- General info form -->

                                                <div class="tab-pane fade show active" id="@navGroupInfoTab" role="tabpanel" aria-labelledby="nav-groupName-tab">
                                                    <input type="hidden" name="SelectedPath" value="@Model.SelectedPath" />
                                                    <input type="hidden" name="SelectedNodeName" value="@Model.SelectedNodeName" />
                                                    <input type="hidden" name="SelectedContentName" value="@Model.SelectedContentName" />
                                                    <input type="hidden" name="Group" value="@Model.GroupAD" />
                                                    <input type="hidden" name="OuGroup" value="@Model.OuGroup" />
                                                    <input type="hidden" name="ExpandedNodesName" value="@Model.ExpandedNodesName" />
                                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                                        <div class="form-group row">
                                            <label asp-for="@Model.GroupAD.SamAccountName" class="col-sm-2 col-form-label">Name</label>
                                            <div class="col-sm-10">
                                                <input asp-for="@Model.GroupAD.SamAccountName" class="form-control">
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label asp-for="@Model.GroupAD.Description" class="col-sm-2 col-form-label">Description</label>
                                            <div class="col-sm-10">
                                                <input asp-for="@Model.GroupAD.Description" class="form-control" placeholder="">
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label asp-for="@Model.GroupAD.Email" class="col-sm-2 col-form-label">Email</label>
                                            <div class="col-sm-10">
                                                <input asp-for="@Model.GroupAD.Email" type="Email" class="form-control" id="Email" placeholder="Email">
                                            </div>
                                        </div>

                                        <script type="text/javascript">

                                                    var today = new Date();
                                                    var nextYear = new Date(today.getFullYear() + 1, today.getMonth(), today.getDate());
                                                    var dateExp = new Date(@Model.GroupAD.ExpirationDate.Year,@Model.GroupAD.ExpirationDate.Month, @Model.GroupAD.ExpirationDate.Day);


                                                    $("#datepickerExpId@(groupId)")
                                                            .val(dateExp.toISOString().substring(0, 10))
                                                        .datepicker({
                                                            maxDate: nextYear,
                                                            minDate: today,
                                                            defaultDate: dateExp,
                                                            dateFormat: "yy-mm-dd",
                                                        });

                                        </script>

                                        <div class="form-group row">
                                            <label asp-for="@Model.GroupAD.ExpirationDate" class="col-sm-2 col-form-label">Expiration Date</label>
                                            <div class="col-sm-10">
                                                <input asp-for="@Model.GroupAD.ExpirationDate" id="datepickerExpId@(groupId)" class="form-control" type="text" value="" readonly />
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label asp-for="@Model.GroupAD.Notes">Notes</label>
                                            <textarea asp-for="@Model.GroupAD.Notes" class="form-control" id="Notes" rows="3"></textarea>
                                        </div>

                                    </div>}

                                <!-- members form -->
                                <div class="tab-pane fade tab-absolute" id="@navMembersTab" role="tabpanel" aria-labelledby="nav-members-tab">
                                    <div>
                                        <div class="directorist-select directorist-select-multi" id="EditMembersMultiSelect" data-isSearch="true" data-multiSelect='@Model.UsersAD'>

                                            <input type="hidden" asp-for="@Model.SelectedMembers">
                                            <input type="hidden" asp-for="@Model.BeforeEditMembers" />
                                        </div>
                                    </div>
                                </div>
                                @if (u.GetRole().AdCrudAccess)
                                {<!-- Owners form -->
                                    <div class="tab-pane fade tab-absolute" id="@navOwnersTab" role="tabpanel" aria-labelledby="nav-owners-tab">

                                        <div id="@selectedOwnersTarget">
                                            @*<div class="directorist-select directorist-select-multi" id="EditOwnersMultiSelect" data-isSearch="true" data-multiSelect='@Model.UsersAD'>
                                                    <input type="hidden" asp-for="@Model.SelectedOwners">
                                                </div>*@
                                        </div>
                                    </div>}
                                <div class="modal-footer">
                                    <button type="submit" class="btn btn-primary" id="btnSave">Ok</button>
                                    <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

                        <!-- Button to delete -->
                        @if (u.GetRole().AdCrudAccess)
                        {
                            <form onsubmit="return formSubmit(this)" style="display: inline-block">
                                <button class="btn btn-primary" data-toggle="tooltip" data-html="true" data-placement="right" title="@HADES.Strings.Delete">
                                    <i class="fa fa-trash-alt fa-fw"></i>
                                </button>
                                <input type="hidden" name="SelectedPath" value="@Model.SelectedPath" />
                                <input type="hidden" name="SelectedContentName" value="@Model.ADRoot[i].SamAccountName" />
                                <input type="hidden" name="ExpandedNodesName" value="@Model.ExpandedNodesName" />
                            </form>
                        }

    </td>
</tr>}
            }
    </tbody>
</table>

<script type="text/javascript" src="~/js/formValidation.js"></script>
<script type="text/javascript" src="~/js/formFocus.js"></script>
<script type="text/javascript">
    //pureScriptSelect('#selectImg');
   //pureScriptSelect('#selectIcon');
</script>

