@model MainViewViewModel
@{
    int i = Model.Index;

}

@{
    IUser u = HADES.Util.ConnexionUtil.CurrentUser(Context.User);
}

<form asp-action="EditGroupModal" class="needs-validation" asp-controller="Home" data-ajax="true" data-ajax-method="POST" data-ajax-mode="replace" data-ajax-update="#main" novalidate>
    <div class="modal-body GroupModalBody">
        <nav>
            <div class="nav nav-tabs nav-fill" id="nav-tab" role="tablist">
                <a class="nav-item nav-link active" id="nav-groupName-tab" data-toggle="tab" href="#nav-groupInfo@(i)"
                   role="tab" aria-controls="nav-home" aria-selected="true">@Strings.General</a>
                <a class="nav-item nav-link" id="nav-members-tab" data-toggle="tab" href="#nav-members@(i)"
                   role="tab" aria-controls="nav-members" aria-selected="false">@Strings.Members</a>
                <a class="nav-item nav-link" id="nav-owners-tab" data-toggle="tab" href="#nav-owners@(i)"
                   role="tab" aria-controls="nav-owners" aria-selected="false">@Strings.Owners</a>
            </div>
        </nav>

        <div class="tab-content" id="nav-tabContent">

            <!-- General info form -->

            <div class="tab-pane fade show active" id="nav-groupInfo@(i)" role="tabpanel" aria-labelledby="nav-groupName-tab">
                <input type="hidden" name="SelectedPath" value="@Model.SelectedPath" />
                <input type="hidden" name="SelectedNodeName" value="@Model.SelectedNodeName" />
                <input type="hidden" name="SelectedContentName" value="@Model.SelectedContentName" />
                <input type="hidden" name="Group" value="@Model.GroupAD" />
                <input type="hidden" name="OuGroup" value="@Model.OuGroup" />
                <input type="hidden" name="ExpandedNodesName" value="@Model.ExpandedNodesName" />
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                @if (u.GetRole().AdCrudAccess)
                {
                    <div class="form-group row">
                        <label asp-for="@Model.GroupAD.SamAccountName" class="col-sm-3 col-form-label text-left">@Strings.Name</label>
                        <div class="col-sm-9">
                            <input asp-for="@Model.GroupAD.SamAccountName" class="form-control sam-account-name" pattern='^[^/[\]:;|=+*?<>,"\\]*$' required>
                            <div class="invalid-tooltip">
                                @HADES.Strings.InvalidCharacters
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group row">
                        <label asp-for="@Model.GroupAD.SamAccountName" class="col-sm-3 col-form-label text-left">@Strings.Name</label>
                        <div class="col-sm-9">
                            <input asp-for="@Model.GroupAD.SamAccountName" class="form-control" readonly>
                        </div>
                    </div>
                }


                <div class="form-group row">
                    <label asp-for="@Model.GroupAD.Description" class="col-sm-3 col-form-label text-left">@Strings.Description</label>
                    <div class="col-sm-9">
                        <input asp-for="@Model.GroupAD.Description" class="form-control" placeholder="">
                    </div>
                </div>

                @if (u.GetRole().AdCrudAccess)
                {
                    <div class="form-group row">
                        <label asp-for="@Model.GroupAD.Email" class="col-sm-3 col-form-label text-left">@Strings.Email</label>
                        <div class="col-sm-9">
                            <input asp-for="@Model.GroupAD.Email" type="Email" class="form-control email-field" id="Email" placeholder="@Strings.Email">
                            <div class="invalid-tooltip">
                                @HADES.Strings.InvalidCharacters
                            </div>
                        </div>
                    </div>
                }
                else
                {
                    <div class="form-group row">
                        <label asp-for="@Model.GroupAD.Email" class="col-sm-3 col-form-label text-left">@Strings.Email</label>
                        <div class="col-sm-9">
                            <input asp-for="@Model.GroupAD.Email" type="Email" class="form-control email-field" id="Email" placeholder="Email" readonly>
                        </div>
                    </div>
                }

                <script type="text/javascript">

                    var today = new Date();
                    var nextYear = new Date(today.getFullYear() + 1, today.getMonth(), today.getDate());
                    var dateExp = new Date(@Model.GroupAD.ExpirationDate.Year,@Model.GroupAD.ExpirationDate.Month, @Model.GroupAD.ExpirationDate.Day);


                    $("#datepickerExpIdb@(i)")
                        .val(dateExp.toISOString().substring(0, 10))
                    @{
                    string datePickerT = "";
                    }

                    @if (u.GetRole().AdCrudAccess)
                        {
                            datePickerT = ".datepicker({maxDate: nextYear,minDate: today,defaultDate: dateExp,dateFormat: 'yy-mm-dd',});";
                            
                        }
                          @Html.Raw(datePickerT) 

                </script>



                <div class="form-group row">
                    <label asp-for="@Model.GroupAD.ExpirationDate" class="col-sm-3 col-form-label">@Strings.ExpirationDate</label>
                    <div class="col-sm-9">
                        <input asp-for="@Model.GroupAD.ExpirationDate" id="datepickerExpIdb@(i)" class="form-control" type="text" value="" readonly />
                    </div>
                </div>

                <div class="form-group row">
                    <label asp-for="@Model.GroupAD.Notes" class="col-sm-12 text-left">@Strings.Notes</label>
                    <div class="col-sm-12">
                        <textarea asp-for="@Model.GroupAD.Notes" class="form-control" id="Notes" rows="3"></textarea>
                    </div>
                </div>

            </div>
            <!-- members form -->
            <div class="tab-pane fade tab-absolute" id="nav-members@(i)" role="tabpanel" aria-labelledby="nav-members-tab">
                <input type="hidden" asp-for="@Model.BeforeEditMembers" id="beforeEdit@(i)" />
                <div>
                    <div class="directorist-select directorist-select-multi" id="EditMembersMultiSelect@(i)" data-isSearch="true" data-multiSelect='@Model.UsersAD'>
                        <input type="hidden" asp-for="@Model.SelectedMembers" id="selectedMember@(i)">
                    </div>
                </div>
            </div>
            <!-- Owners form -->
            <div class="tab-pane fade tab-absolute" id="nav-owners@(i)" role="tabpanel" aria-labelledby="nav-owners-tab">
                @if (!u.GetRole().AdCrudAccess)
                {
                    <div class="text-danger text-center col-12 m-1 p-1">
                        @Localizer["Unauthorized"]
                    </div>
                }
                <div class="directorist-select directorist-select-multi" id="EditOwnersMultiSelect@(i)" data-isSearch="true" data-multiSelect='@Model.UsersAD'>
                    <input id="selectedOwner@(i)" type="hidden" asp-for="@Model.SelectedOwners">
                </div>
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <div class="edit-loading-indicator hidden">
            <span><i class="fa fa-spinner fa-spin" style="font-size:24px"></i></span><span>@Strings.PleaseWait</span>
        </div>
        <button type="submit" class="btn btn-primary" id="btnEditSave">@Strings.OK</button>
        <button type="button" class="btn btn-danger" data-dismiss="modal">@Strings.Back</button>
    </div>
</form>

<script type="text/javascript">
    @if (u.GetRole().AdCrudAccess) {
        @Html.Raw("pureScriptSelect('#EditOwnersMultiSelect"+ i +"');");
    }
    pureScriptSelect('#EditMembersMultiSelect@(i)');

    $("#btnEditSave").click(e => {
        let samRegExp = /^[^/[\]:;|=+*?<>,"\\]*$/;
        //https://www.emailregex.com/
        let emailRegExp = /^(([^<>()\[\]\\.,;:\s@@"]+(\.[^<>()\[\]\\.,;:\s@@"]+)*)|(".+"))@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;

        let sam = $(".sam-account-name").val();
        let email = $(".email-field").val();

        if (sam != "" && samRegExp.test(sam) && (!email || email == "" || emailRegExp.test(email))) {
            $(".edit-loading-indicator").removeClass("hidden");
        }
    });

    $(".edit-modal").on("hidden.bs.modal", () => {
        $(".edit-modal").off("hidden.bs.modal");
        $(".edit-loading-indicator").addClass("hidden");
    });
</script>

<script type="text/javascript" src="~/js/formValidation.js"></script>
<script type="text/javascript" src="~/js/formFocus.js"></script>
