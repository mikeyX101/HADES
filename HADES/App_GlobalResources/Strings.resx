<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="GlobalString" xml:space="preserve">
    <value>GlobalFR</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Retirer</value>
  </data>
  <data name="English" xml:space="preserve">
    <value>Anglais</value>
  </data>
  <data name="French" xml:space="preserve">
    <value>Français</value>
  </data>
  <data name="Portuguese" xml:space="preserve">
    <value>Portugais</value>
  </data>
  <data name="Spanish" xml:space="preserve">
    <value>Espagnol</value>
  </data>
  <data name="ErrorSavingConfiguration" xml:space="preserve">
    <value>La configuration n'a pas pu être sauvegardée vérifier que les champs sont bien remplis</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Retour</value>
  </data>
  <data name="email_ExpirationDateMessage" xml:space="preserve">
    <value>La date d'expiration est arrivée a échéance pour un groupe.</value>
  </data>
  <data name="email_ExpirationDateSubject" xml:space="preserve">
    <value>La date d'expiration</value>
  </data>
  <data name="email_GroupCreateSubject" xml:space="preserve">
    <value>La création d'un groupe</value>
  </data>
  <data name="email_GroupCreateMessage" xml:space="preserve">
    <value>Un groupe a été créé.</value>
  </data>
  <data name="email_GroupDeleteSubject" xml:space="preserve">
    <value>La suppression d'un groupe</value>
  </data>
  <data name="email_GroupDeleteMessage" xml:space="preserve">
    <value>Un groupe a été supprimé.</value>
  </data>
  <data name="email_MemberAddSubject" xml:space="preserve">
    <value>Ajout de Membres</value>
  </data>
  <data name="email_MemberAddMessage" xml:space="preserve">
    <value>Des membres ont été ajouté à un groupe.</value>
  </data>
  <data name="email_MemberRemovalSubject" xml:space="preserve">
    <value>Suppression de membres</value>
  </data>
  <data name="email_MemberRemovalMessage" xml:space="preserve">
    <value>Des membres ont été supprimé d'un groupe.</value>
  </data>
  <data name="email_name" xml:space="preserve">
    <value>Nom:</value>
  </data>
  <data name="NegativeValueError" xml:space="preserve">
    <value>Une valeur négative à été entrée alors que l'application attendaient une valeur positive</value>
  </data>
  <data name="email_Members" xml:space="preserve">
    <value>Membres:</value>
  </data>
  <data name="email_membersaddes" xml:space="preserve">
    <value>Membres ajoutés: </value>
  </data>
  <data name="email_membersSup" xml:space="preserve">
    <value>Membres supprimés: </value>
  </data>
  <data name="MainView" xml:space="preserve">
    <value>Dossiers et groupes</value>
  </data>
  <data name="AppConfig" xml:space="preserve">
    <value>Paramètres de l'application</value>
  </data>
  <data name="UserConfig" xml:space="preserve">
    <value>Paramètres de l'utilisateur</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Sauvegarder</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Abandonner</value>
  </data>
  <data name="email_ExpirationDateSoonMsg" xml:space="preserve">
    <value>Le groupe expirera dans</value>
  </data>
  <data name="email_ExpirationDateSoonMsg02" xml:space="preserve">
    <value>jour(s).</value>
  </data>
  <data name="errorFileSize" xml:space="preserve">
    <value>Un fichier est trop grand</value>
  </data>
  <data name="Documentation" xml:space="preserve">
    <value>Documentation</value>
  </data>
  <data name="doc_notexpdateTitle" xml:space="preserve">
    <value>La date d'expiration des groupes</value>
  </data>
  <data name="doc_notexp01" xml:space="preserve">
    <value>L’utilisation du champ de la date d’expiration pour les groupes nécessite une configuration spéciale. Pour que le champ de la date d’expiration des groupes soit fonctionnel, il faut ajouter un attribut personnalisé et l’ajouter à la classe groupe de votre Active Directory. Ainsi, cette information ne sera pas conservée dans la base de données d’Hades, mais bien directement, dans votre Active Directory. </value>
  </data>
  <data name="doc_notexp02" xml:space="preserve">
    <value>Voici un petit guide étape par étape pour vous aider à réaliser cette configuration.</value>
  </data>
  <data name="doc_notexp03" xml:space="preserve">
    <value>Pour commencer il faut installer le composant logiciel de schéma Active Directory. Vous devez exécuter la commande regsvr32 schmmgmt.dll à l'aide d'une invite de commande élevée (en utilisant l'option Exécuter en tant qu'administrateur).</value>
  </data>
  <data name="doc_notexp04" xml:space="preserve">
    <value>Une fois l'outil d'administration du schéma Active Directory installé, il sera disponible sur MMC.</value>
  </data>
  <data name="doc_notexp05" xml:space="preserve">
    <value>Ensuite, vous devez ajouter le Schéma Active Directory comme Snap-in. Cliquer sur Fichier et sur Ajouter/Supprimer des Snap-in...</value>
  </data>
  <data name="doc_notexp06" xml:space="preserve">
    <value>Sélectionnez Active Directory Schéma et sélectionnez ajouter. Cliquer sur Ok.</value>
  </data>
  <data name="doc_notexp07" xml:space="preserve">
    <value>Dans l'outil d'administration du schéma Active Directory, faites un clic droit sur Attributs, puis sélectionnez Créer un attribut… </value>
  </data>
  <data name="doc_notexp08" xml:space="preserve">
    <value>Cliquez sur Continuer (l'avertissement qui s'affiche est pour informer que la création d'un nouvel attribut Active Directory n'est pas une opération réversible et qu'il ne peut pas être supprimé une fois terminé)</value>
  </data>
  <data name="doc_notexp09" xml:space="preserve">
    <value>Renseignez les informations suivantes. Il est très important que les informations soient écrites exactement de cette façon. Le nom commun est ExpirationDateHades. Le nom de LDAP est expirationDateHades. Pour le Object ID, vous devez en générer un. Vous trouverez un lien ci-dessous vers un générateur, mais n'importe quel générateur peux faire l'affaire. La syntaxe est UTC Coded Time. Le restant des champs sont optionnels.</value>
  </data>
  <data name="doc_notexp010" xml:space="preserve">
    <value>Sur l'outil d'administration du schéma Active Directory, accédez à Classes, sélectionnez group puis accédez à ses propriétés.</value>
  </data>
  <data name="doc_notexp011" xml:space="preserve">
    <value>Allez dans l'onglet Attributs, cliquez sur Ajouter, puis ajoutez dateDexpirationHades Une fois terminé, sélectionnez l'attribut à ajouter et cliquez sur OK. Cliquer sur Appliquer.</value>
  </data>
  <data name="doc_notexp012" xml:space="preserve">
    <value>Pour que la nouvelle attribut soit disponible dans votre Active Directory, vous devez redémarrez votre serveur. Pour valider que votre nouvelle attribut est disponible, vous pouvez aller voir dans l'éditeur d'attributes d'un groupe dans votre Active Directory.</value>
  </data>
  <data name="link_generator" xml:space="preserve">
    <value>Lien vers le Genérateur</value>
  </data>
  <data name="Doc_intro" xml:space="preserve">
    <value>HADES  a été développé dans le cadre d'un cours collégial. L'application n'offre donc pas de support. C’est un outil qui permet la gestion des groupes de l’Active Directory (AD). Le principe est de rendre conviviale la gestion de ces groupes afin que des personnes externes au département des techniciens informatiques puissent gérer des permissions. En plus, la plateforme contient un gestionnaire d’événements (les logs) et un système de notification par courriel configurable. </value>
  </data>
  <data name="NoLog" xml:space="preserve">
    <value>Aucun journal n'a été trouvé pour cette journée.</value>
  </data>
</root>